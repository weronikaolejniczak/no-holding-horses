{"version":3,"sources":["redux/races/racesTypes.ts","redux/races/getRacesActions.ts","redux/race/raceTypes.ts","redux/races/racesSelectors.ts","components/ChipsSection.tsx","components/RacesList.tsx","components/RacesListSkeleton.tsx","pages/Races.tsx","redux/race/clearRaceActions.ts","redux/participants/participantsTypes.ts","redux/race/getRaceByIdActions.ts","redux/race/raceSelectors.ts","redux/participants/getParticipantsActions.ts","constants/EColors.ts","redux/participants/participantsSelectors.ts","components/ParticipantsTable.tsx","components/BetFormActions.tsx","redux/bets/betsTypes.ts","helpers/saveStateToLocalStorage.ts","assets/horse.svg","redux/bets/betsActions.ts","components/BetForm.tsx","hooks/useInput.ts","components/BetFormSkeleton.tsx","pages/Race.tsx","enums/ENavigationTabs.ts","pages/Home.tsx","redux/bets/betsSelectors.ts","components/BetsList.tsx","pages/Bets.tsx","components/Navigation.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","redux/races/racesReducer.ts","redux/race/raceReducer.ts","redux/participants/participantsReducer.ts","redux/bets/betsReducer.ts","redux/store.ts","helpers/loadStateFromLocalStorage.ts","index.tsx"],"names":["ERacesTypes","ERaceTypes","getRacesSuccessfully","response","type","GET_RACES_SUCCESS","payload","selectRaces","state","races","selectRacesData","createSelector","data","selectRacesIsLoading","isLoading","ChipsSection","setFilteredRaces","useSelector","useState","filterMode","setFilterMode","filterRaces","active","filter","race","className","Chip","color","undefined","label","sx","marginRight","onClick","RacesList","filteredRaces","map","id","name","style","textDecoration","to","Card","raised","padding","margin","variant","RacesListSkeleton","placeholders","Array","fill","width","Skeleton","marginLeft","Races","dispatch","useDispatch","isRacesLoading","useEffect","a","GET_RACES","axios","get","process","message","error","GET_RACES_FAILURE","paddingBottom","minHeight","EParticipantsTypes","getRaceByIdSuccessfully","GET_RACE_SUCCESS","selectRace","selectRaceData","selectRaceIsLoading","selectRaceDataParticipants","participants","EColors","getParticipantsSuccessfully","GET_PARTICIPANTS_SUCCESS","selectParticipants","selectParticipantsIsLoading","selectParticipantsData","ParticipantsTable","bets","setBets","participantIds","participant","includes","selectParticipantsWithIds","rows","body","toggleRadio","betPlace","entryForParticipant","Object","entries","find","bet","betForParticipant","prevBets","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","Radio","onChange","checked","winner","secondPlace","thirdPlace","EBetsTypes","BetFormActions","handleOnSubmit","resetForm","throttledSubmit","throttle","display","alignItems","justifyContent","flexDirection","marginTop","Button","_path","saveAndHydrateBets","betAmount","getState","serializedState","JSON","stringify","localStorage","setItem","err","console","warn","saveStateToLocalStorage","SAVE_BETS","saveBets","BetForm","initialBets","initialValue","value","setValue","event","target","useInput","handleBetAmountOnChange","setBetAmount","setError","TextField","required","marginBottom","Number","BetFormSkeleton","height","Race","isRaceLoading","isParticipantsLoading","useParams","chipLabel","GET_RACE","GET_RACE_FAILURE","getRaceByIdRequest","GET_PARTICIPANTS","GET_PARTICIPANTS_FAILURE","CLEAR_RACE","_excluded","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHorse","_ref","svgRef","title","titleId","props","viewBox","ref","d","ENavigationTabs","ForwardRef","Home","darkBackground","RACES","selectBetsArray","UID","BetsList","fontWeight","Bets","Navigation","pathname","useLocation","currentTab","split","Tabs","Tab","HOME","Link","BETS","Header","backgroundColor","surface","paddingLeft","paddingRight","Footer","year","Date","getFullYear","bottom","position","App","background","path","element","racesReducer","produce","draftState","raceReducer","participantsReducer","betsReducer","persistedState","getItem","parse","loadStateFromLocalStorage","baseReducer","combineReducers","middleWares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3d7a0f6.chunk.js","sourcesContent":["export enum ERacesTypes {\n  GET_RACES = 'GET_RACES',\n  GET_RACES_SUCCESS = 'GET_RACES_SUCCESS',\n  GET_RACES_FAILURE = 'GET_RACES_FAILURE',\n}\n","import axios from 'axios';\n\nimport { ERacesTypes } from 'redux/races/racesTypes';\nimport { AppDispatch } from 'redux/store';\nimport { IRace } from 'interfaces/IRace';\n\nexport const getRaces = () => ({\n  type: ERacesTypes.GET_RACES,\n});\n\nexport const getRacesSuccessfully = (response: IRace[]) => ({\n  type: ERacesTypes.GET_RACES_SUCCESS,\n  payload: response,\n});\n\nexport const getRacesUnsuccessfully = (error: string) => ({\n  type: ERacesTypes.GET_RACES_FAILURE,\n  error,\n});\n\nexport const getRacesRequest = () => async (dispatch: AppDispatch) => {\n  dispatch(getRaces());\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_RACES_API_URL}/races` ?? '');\n    dispatch(getRacesSuccessfully(response.data));\n  } catch ({ message }) {\n    dispatch(getRacesUnsuccessfully(message as string));\n  }\n};\n","export enum ERaceTypes {\n  GET_RACE = 'GET_RACE',\n  GET_RACE_SUCCESS = 'GET_RACE_SUCCESS',\n  GET_RACE_FAILURE = 'GET_RACE_FAILURE',\n  CLEAR_RACE = 'CLEAR_RACE',\n}\n","import { createSelector } from 'reselect';\n\nimport { RootState } from 'redux/store';\n\nconst selectRaces = (state: RootState) => state.races;\n\nexport const selectRacesData = createSelector(\n  selectRaces,\n  (races) => races.data,\n);\n\nexport const selectRacesIsLoading = createSelector(\n  selectRaces,\n  (races) => races.isLoading,\n);\n","import { useSelector } from 'react-redux';\n\nimport { Chip } from '@mui/material';\nimport { useState } from 'react';\nimport { selectRacesData } from 'redux/races/racesSelectors';\nimport { IRace } from 'interfaces/IRace';\n\ninterface IChipsSectionProps {\n  setFilteredRaces: (races: IRace[]) => void;\n}\n\nexport const ChipsSection = ({ setFilteredRaces }: IChipsSectionProps) => {\n  const races: IRace[] = useSelector(selectRacesData);\n\n  const [filterMode, setFilterMode] = useState('all');\n\n  const filterRaces = (active: boolean) =>\n    setFilteredRaces(races.filter((race) => race.active === active));\n\n  const showActiveRaces = () => {\n    filterRaces(true);\n    setFilterMode('active');\n  };\n\n  const showInactiveRaces = () => {\n    filterRaces(false);\n    setFilterMode('inactive');\n  };\n\n  const showAllRaces = () => {\n    setFilteredRaces(races);\n    setFilterMode('all');\n  };\n\n  return (\n    <div className=\"chips-section\">\n      <Chip\n        color={filterMode === 'all' ? 'primary' : undefined}\n        label=\"All\"\n        sx={{ marginRight: 1 }}\n        onClick={showAllRaces}\n      />\n      <Chip\n        color={filterMode === 'active' ? 'primary' : undefined}\n        label=\"Active\"\n        sx={{ marginRight: 1 }}\n        onClick={showActiveRaces}\n      />\n      <Chip\n        color={filterMode === 'inactive' ? 'primary' : undefined}\n        label=\"Inactive\"\n        onClick={showInactiveRaces}\n      />\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Card, Chip } from '@mui/material';\n\nimport { selectRacesData } from 'redux/races/racesSelectors';\nimport { IRace } from 'interfaces/IRace';\nimport { ChipsSection } from 'components/ChipsSection';\n\nexport const RacesList = () => {\n  const races: IRace[] = useSelector(selectRacesData);\n\n  const [filteredRaces, setFilteredRaces] = useState(races);\n\n  return (\n    <div className=\"races-list\">\n      <ChipsSection setFilteredRaces={setFilteredRaces} />\n      {filteredRaces.map(({ id, name, active }) => (\n        <Link style={{ textDecoration: 'none' }} key={id} to={`/races/${id}`}>\n          <Card raised sx={{ padding: 2, margin: 2 }}>\n            <Chip\n              label={active ? 'ACTIVE' : 'INACTIVE'}\n              variant={active ? undefined : 'outlined'}\n              sx={{ marginRight: 1 }}\n            />\n            {name}\n          </Card>\n        </Link>\n      ))}\n    </div>\n  );\n};\n","import { Card, Chip, Skeleton } from '@mui/material';\n\nexport const RacesListSkeleton = () => {\n  const placeholders = new Array(5).fill(null);\n\n  return (\n    <div className=\"races-list\">\n      <Chip sx={{ marginRight: 1, width: 100 }} />\n      <Chip sx={{ marginRight: 1, width: 100 }} />\n      <Chip sx={{ width: 100 }} />\n      {placeholders.map(() => (\n        <Skeleton width=\"100%\" variant=\"rectangular\">\n          <Card raised sx={{ marginLeft: 3, padding: 2, margin: 2 }}>\n            <Chip sx={{ marginRight: 1 }} />\n          </Card>\n        </Skeleton>\n      ))}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getRacesRequest } from 'redux/races/getRacesActions';\nimport { selectRacesIsLoading } from 'redux/races/racesSelectors';\nimport { RacesList } from 'components/RacesList';\nimport { RacesListSkeleton } from 'components/RacesListSkeleton';\n\nexport const Races = () => {\n  const dispatch = useDispatch();\n  const isRacesLoading = useSelector(selectRacesIsLoading);\n\n  useEffect(() => {\n    dispatch(getRacesRequest());\n  }, [dispatch]);\n\n  return (\n    <section\n      style={{\n        padding: 10,\n        paddingBottom: 70,\n        minHeight: 'calc(100vh - 150px)',\n      }}\n    >\n      <h2>Races</h2>\n      {isRacesLoading ? <RacesListSkeleton /> : <RacesList />}\n    </section>\n  );\n};\n","import { ERaceTypes } from 'redux/race/raceTypes';\n\nexport const clearRace = () => ({\n  type: ERaceTypes.CLEAR_RACE,\n});\n","export enum EParticipantsTypes {\n  GET_PARTICIPANTS = 'GET_PARTICIPANTS',\n  GET_PARTICIPANTS_SUCCESS = 'GET_PARTICIPANTS_SUCCESS',\n  GET_PARTICIPANTS_FAILURE = 'GET_PARTICIPANTS_FAILURE',\n}\n","import axios from 'axios';\n\nimport { ERaceTypes } from 'redux/race/raceTypes';\nimport { AppDispatch } from 'redux/store';\nimport { IRace } from 'interfaces/IRace';\n\nexport const getRaceById = () => ({\n  type: ERaceTypes.GET_RACE,\n});\n\nexport const getRaceByIdSuccessfully = (response: IRace[]) => ({\n  type: ERaceTypes.GET_RACE_SUCCESS,\n  payload: response,\n});\n\nexport const getRaceByIdUnsuccessfully = (error: string) => ({\n  type: ERaceTypes.GET_RACE_FAILURE,\n  error,\n});\n\nexport const getRaceByIdRequest =\n  (id: number) => async (dispatch: AppDispatch) => {\n    dispatch(getRaceById());\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_RACES_API_URL}/races/${id}` ?? '',\n      );\n      dispatch(getRaceByIdSuccessfully(response.data));\n    } catch ({ message }) {\n      dispatch(getRaceByIdUnsuccessfully(message as string));\n    }\n  };\n","import { createSelector } from 'reselect';\n\nimport { RootState } from 'redux/store';\n\nconst selectRace = (state: RootState) => state.race;\n\nexport const selectRaceData = createSelector(selectRace, (race) => race.data);\n\nexport const selectRaceIsLoading = createSelector(\n  selectRace,\n  (race) => race.isLoading,\n);\n\nexport const selectRaceDataParticipants = createSelector(\n  selectRaceData,\n  (data) => data?.participants ?? [],\n);\n","import axios from 'axios';\n\nimport { EParticipantsTypes } from 'redux/participants/participantsTypes';\nimport { AppDispatch } from 'redux/store';\nimport { IParticipant } from 'interfaces/IParticipant';\n\nexport const getParticipants = () => ({\n  type: EParticipantsTypes.GET_PARTICIPANTS,\n});\n\nexport const getParticipantsSuccessfully = (response: IParticipant[]) => ({\n  type: EParticipantsTypes.GET_PARTICIPANTS_SUCCESS,\n  payload: response,\n});\n\nexport const getParticipantsUnsuccessfully = (error: string) => ({\n  type: EParticipantsTypes.GET_PARTICIPANTS_FAILURE,\n  error,\n});\n\nexport const getParticipantsRequest = () => async (dispatch: AppDispatch) => {\n  dispatch(getParticipants());\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_RACES_API_URL}/participants` ?? '',\n    );\n    dispatch(getParticipantsSuccessfully(response.data));\n  } catch ({ message }) {\n    dispatch(getParticipantsUnsuccessfully(message as string));\n  }\n};\n","export enum EColors {\n  background = '#fff8e7',\n  darkBackground = '#ffe9b6',\n  error = '#ef5350',\n  surface = '#ffffff',\n}\n","import { createSelector } from 'reselect';\n\nimport { RootState } from 'redux/store';\nimport { IParticipant } from 'interfaces/IParticipant';\n\nconst selectParticipants = (state: RootState) => state.participants;\n\nexport const selectParticipantsIsLoading = createSelector(\n  selectParticipants,\n  (participants) => participants.isLoading,\n);\n\nexport const selectParticipantsData = createSelector(\n  selectParticipants,\n  (participants) => participants.data,\n);\n\nexport const selectParticipantsWithIds = (participantIds: number[]) =>\n  createSelector(\n    selectParticipantsData,\n    (participants) =>\n      participants.filter((participant: IParticipant) =>\n        participantIds.includes(participant.id),\n      ),\n  );\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Radio,\n} from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { selectRaceDataParticipants } from 'redux/race/raceSelectors';\nimport { selectParticipantsWithIds } from 'redux/participants/participantsSelectors';\nimport { IBets } from 'interfaces/IBets';\n\ninterface IParticipantsTableProps {\n  bets: IBets;\n  setBets: (value: IBets | ((bets: IBets) => IBets)) => void;\n}\n\nexport const ParticipantsTable = ({\n  bets,\n  setBets,\n}: IParticipantsTableProps) => {\n  const participantIds = useSelector(selectRaceDataParticipants);\n  const participants = useSelector(selectParticipantsWithIds(participantIds));\n\n  const rows = participants.map(({ id, body }) => ({\n    id,\n    name: body,\n  }));\n\n  const toggleRadio = (\n    participant: string,\n    betPlace: 'winner' | 'secondPlace' | 'thirdPlace',\n  ) => {\n    const entryForParticipant = Object.entries(bets).find(\n      (bet) => bet[1] === participant,\n    );\n    const betForParticipant = entryForParticipant\n      ? entryForParticipant[0]\n      : undefined;\n    setBets((prevBets) =>\n      betForParticipant\n        ? { ...prevBets, [betForParticipant]: '', [betPlace]: participant }\n        : { ...prevBets, [betPlace]: participant },\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Winner</TableCell>\n            <TableCell>2nd place</TableCell>\n            <TableCell>3rd place</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>\n                <Radio\n                  onChange={() => toggleRadio(row.name, 'winner')}\n                  checked={bets.winner === row.name}\n                />\n              </TableCell>\n              <TableCell>\n                <Radio\n                  onChange={() => toggleRadio(row.name, 'secondPlace')}\n                  checked={bets.secondPlace === row.name}\n                />\n              </TableCell>\n              <TableCell>\n                <Radio\n                  onChange={() => toggleRadio(row.name, 'thirdPlace')}\n                  checked={bets.thirdPlace === row.name}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import throttle from 'lodash.throttle';\nimport { Button } from '@mui/material';\n\nimport { EColors } from 'constants/EColors';\n\ninterface IBetFormActionsProps {\n  error: string;\n  handleOnSubmit: () => void;\n  resetForm: () => void;\n}\n\nexport const BetFormActions = ({\n  error,\n  handleOnSubmit,\n  resetForm,\n}: IBetFormActionsProps) => {\n  const throttledSubmit = throttle(handleOnSubmit, 1000);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        marginTop: 30,\n        width: '100%',\n      }}\n    >\n      <p style={{ color: EColors.error }}>{error}</p>\n      <div\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Button variant=\"text\" sx={{ marginRight: 2 }} onClick={resetForm}>\n          Reset form\n        </Button>\n        <Button variant=\"contained\" onClick={throttledSubmit}>\n          Place bet\n        </Button>\n      </div>\n    </div>\n  );\n};\n","export enum EBetsTypes {\n  SAVE_BETS = 'SAVE_BETS',\n}\n","import { RootState } from 'redux/store';\n\nexport const saveStateToLocalStorage = (state: Partial<RootState>): void => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.warn(err);\n  }\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHorse(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"585.07px\",\n    height: \"585.07px\",\n    viewBox: \"0 0 585.07 585.07\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M516.665,268.961c-2.612-2.081-5.633-6.307-7.075-9.321c-15.941-33.423-61.555-43.061-104.987-41.012 c-46.5,2.19-104.438,10.713-112.958,3.408c-7.731-6.629,6.192-1.623,21.754-12.117c2.772-1.871,2.134-3.174-1.188-2.76 c-10.941,1.348-34.277,2.379-47.605-10.678c-2.397-2.334-5.55-6.838-6.644-9.998c-5.902-17.031,22.219-21.462,23.162-4.775 c0.189,3.333,0.57,3.57,1.519,0.363c2.349-7.923,3.638-22.015-14.127-27.479c-22.068-6.792-41.357-4.702-49.334-14.854 c-2.063-2.627-0.195-4.459,3.044-3.632c12.856,3.298,45.025,8.766,75.681-8.334c2.914-1.629,2.583-2.358-0.686-1.67 c-14.118,2.984-50.596,7.554-74.712-17.522c-22.455-23.351-42.386-16.488-51.293-11.281c-2.894,1.688-7.09,1.821-9.824-0.097 c-4.679-3.287-12.386-8.329-21.536-12.903c0,0-14.786-5.843-19.901-24.837c-5.113-18.985-10.042-3.467-9.49,4.936 c0.301,4.678,0.78,10.719,1.138,15.149c0.272,3.328-1.217,8.128-3.584,10.489c-2.885,2.887-6.783,6.244-9.975,7.039 c-5.84,1.457-12.049,4.2-15.155,14.423s-21.911,20.082-31.401,24.647c-9.49,4.563-27.208,17.709-23.738,25.378 c3.467,7.669-5.296,16.976,10.961,21.548c16.252,4.563,17.709,1.64,20.995-4.933c2.973-5.946,17.741-0.541,34.853-7.149 c3.121-1.206,8.145-1.876,11.47-1.525c4.321,0.458,10.27,0.538,15.397-1.368c9.31-3.47,4.38,5.479,4.38,10.402 c0,4.395,1.02,48.078,3.567,67.616c0.428,3.316-0.364,8.311-1.865,11.299c-6.324,12.625-19.999,45.238-7.746,71.062 c1.434,3.02,0.603,6.655-2.396,8.115c-7.985,3.895-24.042,10.456-42.129,10.799c-25.807,0.484-31.897,16.556-33.112,22.645 c-1.218,6.088-29.702,41.269-28.236,53.682c1.339,11.359-12.619,18.441-13.878,38.869c-0.207,3.333,2.675,5.609,5.902,4.729 c9.005-2.465,25.136-8.825,25.136-22.78c0-19.353-1.46-15.155,6.573-28.845c7.572-12.903,13.196-40.069,44.36-43.32 c3.322-0.343,8.686,0.267,11.972,0.869c4.188,0.769,9.847,1.655,14.357,1.844c3.339,0.143,4.4,1.727,2.923,4.729 c-1.889,3.843-3.839,9.387-3.251,15.097c0.346,3.321,3.88,7.247,6.646,9.12c8.473,5.745,25.561,18.205,35.261,31.428 c1.98,2.695,5.527,6.839,8.851,7.205c2.837,0.308,7.02,0.106,13.084-1.412c15.338-3.83,17.159,2.926,18.625,4.562 c1.46,1.644,10.406-4.93,23.915-3.646c0,0,6.204,0-4.383-9.31c-8.033-7.063-10.495-13.808-15.599-15.936 c-3.085-1.288-8.715-0.313-11.801,0.981c-3.821,1.596-3.724,3.995-6.011,8.57c-3.106,6.206-8.402-2.193-11.136-4.386 c-2.743-2.187-32.323-15.882-30.313-29.938c2.01-14.062,20.998-1.1,51.492-8.948c17.31-4.463,27.677-6.266,33.411-6.999 c3.316-0.419,8.733-0.65,12.079-0.75c8.698-0.248,24.272-0.166,29.557,3.186c7.081,4.492,74.425,4.569,106.574-12.731 c2.938-1.591,5.166-0.438,5.415,2.896c0.401,5.533,1.442,13.377,4.138,16.959c3.806,5.077,1.135,28.75-10.043,35.836 c-2.819,1.797-8.357,2.205-11.686,2.584c-15.144,1.708-40.223,5.579-50.152,11.686c-2.855,1.749-6.325,5.828-8.973,7.867 c-8.065,6.212-23.543,19.729-26.327,33.874c-0.641,3.28,2.341,6.224,5.678,6.283c5.139,0.101,12.69-0.077,19.204-1.46 c3.266-0.697,6.563-4.332,7.947-7.377c3.611-7.949,12.176-21.775,28.873-24.477c19.299-3.114,40.654-6.472,51.489-9.587 c3.216-0.916,6.597,0.461,7.282,3.729c0.887,4.197,1.524,9.978,0.023,14.99c-2.73,9.126-18.258,34.69-37.787,45.648 c-15.203,8.518-24.648,15.049-27.497,21.828c-1.301,3.08,1.867,6.372,5.184,6.745c8.263,0.928,22.827,1.749,29.063-2.825 c1.956-1.442,3.339-2.66,4.297-3.688c2.146-2.288,0.987-6.916,1.667-9.239c0.401-1.371,1.33-2.411,3.345-1.867 c4.747,1.276,6.939,2.736,9.683-3.647c2.742-6.396,31.947-38.349,43.639-44.556c11.686-6.212,10.409-18.808,5.846-32.503 c-4.568-13.689-7.488-43.272,8.21-53.132c15.705-9.859,42.18-36.15,52.949-50.756c5.798-7.861,15.562-14.563,21.408-25.227 c1.614-2.932,3.878-3.168,5.421-0.201c12.737,24.5,18.908,55.312,0.213,69.244c-24.914,18.566-11.438,37.563-3.476,45.649 c2.347,2.382,2.831,1.874,1.253-1.07c-11.142-20.747,13.382-25.026,17.626-14.581c3.439,8.481-3.057,31.51-6.461,42.32 c-0.999,3.187,0.538,4.434,2.867,2.039c3.41-3.505,5.976-8.062,7.643-11.608c1.412-3.026,1.654-2.955,1.105,0.343 c-5.385,32.09,7.229,51.932,14.191,60.106c2.163,2.548,3.446,1.726,2.92-1.572c-5.609-35.163,30.653-53.628,30.659-120.621 C585.047,331.677,545.533,291.977,516.665,268.961z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHorse);\nexport default __webpack_public_path__ + \"static/media/horse.f06be47a.svg\";\nexport { ForwardRef as ReactComponent };","import { EBetsTypes } from 'redux/bets/betsTypes';\nimport { IBets } from 'interfaces/IBets';\nimport { saveStateToLocalStorage } from 'helpers/saveStateToLocalStorage';\nimport { AppDispatch, RootState } from 'redux/store';\n\nexport const saveBets = (race: string, betAmount: number, bets: IBets) => ({\n  type: EBetsTypes.SAVE_BETS,\n  payload: {\n    id: race,\n    betAmount,\n    bets,\n  },\n});\n\nexport const saveAndHydrateBets =\n  (race: string, betAmount: number, bets: IBets) =>\n  (dispatch: AppDispatch, getState: () => RootState) => {\n    saveStateToLocalStorage({\n      bets: {\n        ...getState().bets,\n        [race]: {\n          betAmount,\n          bets,\n        },\n      },\n    });\n    dispatch(saveBets(race, betAmount, bets));\n  };\n","import { TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ParticipantsTable } from 'components/ParticipantsTable';\nimport { BetFormActions } from 'components/BetFormActions';\nimport { saveAndHydrateBets } from 'redux/bets/betsActions';\nimport { useInput } from 'hooks/useInput';\n\ninterface IBetFormProps {\n  race: string | undefined;\n}\n\nexport const BetForm = ({ race = '' }: IBetFormProps) => {\n  const dispatch = useDispatch();\n\n  const initialBets = {\n    winner: '',\n    secondPlace: '',\n    thirdPlace: '',\n  };\n  const [betAmount, handleBetAmountOnChange, setBetAmount] = useInput('');\n  const [bets, setBets] = useState(initialBets);\n  const [error, setError] = useState('');\n\n  const validateForm = () =>\n    Number(betAmount) > 0 && bets.winner && bets.secondPlace && bets.thirdPlace;\n\n  const resetForm = () => {\n    setError('');\n    setBetAmount('');\n    setBets(initialBets);\n  };\n\n  const handleOnSubmit = () => {\n    const isDataValid = validateForm();\n    if (isDataValid) {\n      setError('');\n      resetForm();\n      dispatch(saveAndHydrateBets(race, Number(betAmount), bets));\n    } else {\n      setError('Choose a winner, 2nd and 3rd place, and enter the bet amount!');\n    }\n  };\n\n  return (\n    <div className=\"bet-form\">\n      <TextField\n        label=\"Bet amount\"\n        color=\"primary\"\n        value={betAmount}\n        onChange={handleBetAmountOnChange}\n        type=\"number\"\n        required\n        aria-required\n        sx={{ marginBottom: 2 }}\n      />\n      <ParticipantsTable bets={bets} setBets={setBets} />\n      <BetFormActions\n        error={error}\n        handleOnSubmit={handleOnSubmit}\n        resetForm={resetForm}\n      />\n    </div>\n  );\n};\n","import { ChangeEventHandler, useState } from 'react';\n\ntype UseInputReturnType = [\n  string,\n  ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>,\n  (value: string) => void,\n];\n\nexport const useInput = (initialValue: string): UseInputReturnType => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleOnChange: ChangeEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  > = (event) => setValue(event.target.value);\n\n  return [value, handleOnChange, setValue];\n};\n","import { Skeleton, Button, TextField } from '@mui/material';\n\nexport const BetFormSkeleton = () => (\n  <div className=\"bet-form\">\n    <Skeleton>\n      <TextField label=\"Bet amount\" sx={{ marginBottom: 2 }} />\n    </Skeleton>\n    <Skeleton variant=\"rectangular\" height={350} />\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 30,\n        width: '100%',\n      }}\n    >\n      <Skeleton sx={{ marginRight: 2 }}>\n        <Button>Reset form</Button>\n      </Skeleton>\n      <Skeleton>\n        <Button>Place bet</Button>\n      </Skeleton>\n    </div>\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Chip, Skeleton } from '@mui/material';\n\nimport { clearRace } from 'redux/race/clearRaceActions';\nimport { getRaceByIdRequest } from 'redux/race/getRaceByIdActions';\nimport { selectRaceData, selectRaceIsLoading } from 'redux/race/raceSelectors';\nimport { getParticipantsRequest } from 'redux/participants/getParticipantsActions';\nimport { selectParticipantsIsLoading } from 'redux/participants/participantsSelectors';\nimport { BetForm } from 'components/BetForm';\nimport { BetFormSkeleton } from 'components/BetFormSkeleton';\n\nexport const Race = () => {\n  const dispatch = useDispatch();\n  const { active, name } = useSelector(selectRaceData);\n  const isRaceLoading = useSelector(selectRaceIsLoading);\n  const isParticipantsLoading = useSelector(selectParticipantsIsLoading);\n\n  const { id } = useParams();\n  const chipLabel = active ? 'ACTIVE' : 'INACTIVE';\n\n  useEffect(() => {\n    dispatch(getRaceByIdRequest(Number(id)));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    dispatch(getParticipantsRequest());\n  }, [dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearRace());\n    };\n  }, [dispatch]);\n\n  return (\n    <section\n      style={{\n        padding: 10,\n        paddingBottom: 70,\n        minHeight: 'calc(100vh - 150px)',\n      }}\n    >\n      <header\n        style={{ alignItems: 'center', display: 'flex', marginBottom: 20 }}\n      >\n        {isRaceLoading ? (\n          <Chip sx={{ marginRight: 2, width: 100 }} />\n        ) : (\n          <Chip label={chipLabel} sx={{ marginRight: 2 }} />\n        )}\n        {isRaceLoading ? (\n          <Skeleton>\n            <h2>Hello, World! I'm a skeleton title!</h2>\n          </Skeleton>\n        ) : (\n          <h2>{name}</h2>\n        )}\n      </header>\n      {isParticipantsLoading ? <BetFormSkeleton /> : <BetForm race={name} />}\n    </section>\n  );\n};\n","export enum ENavigationTabs {\n  HOME = '/',\n  RACES = '/races',\n  BETS = '/bets',\n}\n","import { ReactComponent as Horse } from 'assets/horse.svg';\nimport { EColors } from 'constants/EColors';\nimport { ENavigationTabs } from 'enums/ENavigationTabs';\nimport { Link } from 'react-router-dom';\n\nexport const Home = () => {\n  return (\n    <section\n      style={{\n        alignItems: 'center',\n        display: 'flex',\n        height: 'calc(100vh - 165px)',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: 10,\n        paddingBottom: 70,\n      }}\n    >\n      <Horse width={320} height={350} fill={EColors.darkBackground} />\n      <h3>There's no time for horsing around!</h3>\n      <h1>\n        <span>Place your bet </span>\n        <Link to={ENavigationTabs.RACES}>NOW</Link>!\n      </h1>\n    </section>\n  );\n};\n","import { createSelector } from 'reselect';\nimport map from 'lodash.map';\n\nimport { RootState } from 'redux/store';\n\nconst selectBets = (state: RootState) => state.bets;\n\nexport const selectBetsArray = createSelector(selectBets, (bets) =>\n  map(bets, (value, UID) => ({ name: UID, ...value })),\n);\n","import { Card } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport { selectBetsArray } from 'redux/bets/betsSelectors';\n\nexport const BetsList = () => {\n  const bets = useSelector(selectBetsArray);\n\n  return (\n    <div className=\"bets-list\">\n      {bets.map(({ name, betAmount, bets }) => (\n        <Card key={name} raised sx={{ padding: 2, margin: 2 }}>\n          <h3>{name}</h3>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>Bet amount:</span> {betAmount}\n          </p>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>Winner:</span> {bets.winner}\n          </p>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>2nd place:</span>{' '}\n            {bets.secondPlace}\n          </p>\n          <p>\n            <span style={{ fontWeight: 'bold' }}>3rd place:</span>{' '}\n            {bets.thirdPlace}\n          </p>\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import { BetsList } from 'components/BetsList';\n\nexport const Bets = () => {\n  return (\n    <section\n      style={{\n        padding: 10,\n        paddingBottom: 70,\n        minHeight: 'calc(100vh - 150px)',\n      }}\n    >\n      <h2>My bets</h2>\n      <BetsList />\n    </section>\n  );\n};\n","import { Tabs, Tab } from '@mui/material';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { ENavigationTabs } from 'enums/ENavigationTabs';\n\nexport const Navigation = () => {\n  const { pathname } = useLocation();\n  const currentTab = `/${pathname.split('/')[1]}`;\n\n  return (\n    <Tabs value={currentTab}>\n      <Tab\n        label=\"Home\"\n        value={ENavigationTabs.HOME}\n        to={ENavigationTabs.HOME}\n        component={Link}\n      />\n      <Tab\n        label=\"Races\"\n        value={ENavigationTabs.RACES}\n        to={ENavigationTabs.RACES}\n        component={Link}\n      />\n      <Tab\n        label=\"Bets\"\n        value={ENavigationTabs.BETS}\n        to={ENavigationTabs.BETS}\n        component={Link}\n      />\n    </Tabs>\n  );\n};\n","import { Navigation } from 'components/Navigation';\nimport { EColors } from 'constants/EColors';\n\n// TODO: create breakpoint\nexport const Header = () => (\n  <header\n    style={{\n      alignItems: 'center',\n      backgroundColor: EColors.surface,\n      display: 'flex',\n      padding: 10,\n      paddingLeft: 30,\n      paddingRight: 30,\n    }}\n  >\n    <h3 style={{ marginRight: 25 }}> No Holding Horses 🐎 </h3>\n    <Navigation />\n  </header>\n);\n","import { EColors } from 'constants/EColors';\n\nexport const Footer = () => {\n  const year = new Date().getFullYear();\n\n  return (\n    <footer\n      style={{\n        alignItems: 'center',\n        backgroundColor: EColors.surface,\n        bottom: 0,\n        display: 'flex',\n        height: 50,\n        justifyContent: 'center',\n        position: 'absolute',\n        width: '100%',\n      }}\n    >\n      Weronika Olejniczak © {year}\n    </footer>\n  );\n};\n","import { HashRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { Races } from 'pages/Races';\nimport { Race } from 'pages/Race';\nimport { Home } from 'pages/Home';\nimport { Bets } from 'pages/Bets';\nimport { Header } from 'components/Header';\nimport { Footer } from 'components/Footer';\nimport { EColors } from 'constants/EColors';\n\nexport const App = () => (\n  <Router>\n    <div\n      style={{\n        backgroundColor: EColors.background,\n        minHeight: '100vh',\n        position: 'relative',\n      }}\n    >\n      <Header />\n      <Routes>\n        <Route path=\"/races/:id\" element={<Race />} />\n        <Route path=\"/races\" element={<Races />} />\n        <Route path=\"/bets\" element={<Bets />} />\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n      <Footer />\n    </div>\n  </Router>\n);\n","import produce from 'immer';\n\nimport { ERacesTypes } from 'redux/races/racesTypes';\nimport { IRace } from 'interfaces/IRace';\n\nexport type RacesStateType = {\n  data: IRace[];\n  isLoading: boolean;\n};\n\nconst initialState: RacesStateType = {\n  data: [],\n  isLoading: false,\n};\n\nexport const racesReducer = produce((draftState, { type, payload }) => {\n  switch (type) {\n    case ERacesTypes.GET_RACES:\n      draftState.isLoading = true;\n      break;\n    case ERacesTypes.GET_RACES_SUCCESS:\n      draftState.isLoading = false;\n      draftState.data = payload;\n      break;\n    case ERacesTypes.GET_RACES_FAILURE:\n      draftState.isLoading = false;\n      draftState.data = [];\n      break;\n  }\n}, initialState);\n","import { produce } from 'immer';\n\nimport { ERaceTypes } from 'redux/race/raceTypes';\nimport { IRace } from 'interfaces/IRace';\n\nexport type RaceStateType = {\n  data: Partial<IRace>;\n  isLoading: boolean;\n};\n\nconst initialState: RaceStateType = {\n  data: {},\n  isLoading: false,\n};\n\nexport const raceReducer = produce((draftState, { type, error, payload }) => {\n  switch (type) {\n    case ERaceTypes.GET_RACE:\n      draftState.isLoading = true;\n      break;\n    case ERaceTypes.GET_RACE_SUCCESS:\n      draftState.isLoading = false;\n      draftState.data = payload;\n      break;\n    case ERaceTypes.GET_RACE_FAILURE:\n      draftState.isLoading = false;\n      draftState.data = {};\n      break;\n    case ERaceTypes.CLEAR_RACE:\n      draftState.data = {};\n      break;\n  }\n}, initialState);\n","import produce from 'immer';\n\nimport { EParticipantsTypes } from 'redux/participants/participantsTypes';\nimport { IParticipant } from 'interfaces/IParticipant';\n\nexport type ParticipantsStateType = {\n  data: IParticipant[];\n  isLoading: boolean;\n};\n\nconst initialState: ParticipantsStateType = {\n  data: [],\n  isLoading: false,\n};\n\nexport const participantsReducer = produce((draftState, { type, error, payload }) => {\n  switch (type) {\n    case EParticipantsTypes.GET_PARTICIPANTS:\n      draftState.isLoading = true;\n      break;\n    case EParticipantsTypes.GET_PARTICIPANTS_SUCCESS:\n      draftState.isLoading = false;\n      draftState.data = payload;\n      break;\n    case EParticipantsTypes.GET_PARTICIPANTS_FAILURE:\n      draftState.isLoading = false;\n      draftState.data = [];\n      break;\n  }\n}, initialState);\n","import produce from 'immer';\n\nimport { EBetsTypes } from 'redux/bets/betsTypes';\nimport { IBets } from 'interfaces/IBets';\n\nexport type BetsStateType = {\n  [key: string]: { betAmount: number; bets: IBets };\n};\n\nconst initialState: BetsStateType = {};\n\nexport const betsReducer = produce((draftState, { type, payload }) => {\n  switch (type) {\n    case EBetsTypes.SAVE_BETS:\n      const { id, betAmount, bets } = payload;\n      draftState[id] = { betAmount, bets };\n      break;\n  }\n}, initialState);\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { racesReducer } from 'redux/races/racesReducer';\nimport { raceReducer } from 'redux/race/raceReducer';\nimport { participantsReducer } from 'redux/participants/participantsReducer';\nimport { betsReducer } from 'redux/bets/betsReducer';\nimport { loadStateFromLocalStorage } from 'helpers/loadStateFromLocalStorage';\n\nconst persistedState = loadStateFromLocalStorage();\n\nconst baseReducer = combineReducers({\n  bets: betsReducer,\n  participants: participantsReducer,\n  race: raceReducer,\n  races: racesReducer,\n});\n\nconst middleWares = [thunk];\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  baseReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(...middleWares)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","export const loadStateFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.warn(err);\n    return undefined;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport { App } from './App';\nimport { store } from 'redux/store';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}